version: '3'

services:
  api-tootodo:
    image: seungyeah/api-tootodo
    container_name: api-tootodo
    restart: unless-stopped
    # environment:
    #   DATABASE_URL: ${DATABASE_URL}
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - tootodo_network
      
  postgres:
    image: postgres:15.3-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "postgres", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - tootodo_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    restart: always
    depends_on:
      - postgres
    networks:
      - tootodo_network

  # redis:
  #   image: redis:alpine
  #   container_name: redis
  #   ports:
  #     - '6379:6379'
  #   volumes:
  #     - redisDB:/data      

volumes:
  postgres:
  pgadmin-data:

networks:
  tootodo_network:

